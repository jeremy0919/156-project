PHP FILE
<?php
require 'vendor/autoload.php';

use Ratchet\MessageComponentInterface;
use Ratchet\ConnectionInterface;
use Ratchet\WebSocket\WsServer;
use Ratchet\Http\HttpServer;

class TicTacToeServer implements MessageComponentInterface {
    protected $clients;

    public function __construct() {
        $this->clients = new \SplObjectStorage;
    }

    public function onOpen(ConnectionInterface $conn) {
        $this->clients->attach($conn);
    }

    public function onMessage(ConnectionInterface $from, $msg) {
        foreach ($this->clients as $client) {
            if ($client !== $from) {
                $client->send($msg);
            }
        }
    }

    public function onClose(ConnectionInterface $conn) {
        $this->clients->detach($conn);
    }

    public function onError(ConnectionInterface $conn, \Exception $e) {
        $conn->close();
    }
}

$server = IoServer::factory(
    new HttpServer(
        new WsServer(
            new TicTacToeServer()
        )
    ),
    8080
);

$server->run();
?>


JS CODE 
const socket = new WebSocket('ws://your-server-url:port');

socket.onopen = () => {
    // Handle the connection to the server.
};

socket.onmessage = (event) => {
    const data = JSON.parse(event.data);
    if (data.type === 'move') {
        // Handle the move received from the server
        const { x, y, player } = data;
        makeTurn(x, y, player);
    }
};

const width = 3;
let gameOver = 0;
let count = 0;
let resultMatrix = new Array(width);
for (let i = 0; i < width; i++) {
    resultMatrix[i] = new Array(width);
}

function createTable() {
    // Your existing createTable function code
    // ...
}

function newGame() {
    // Your existing newGame function code
    // ...
}

function makeTurn(x, y, player) {
    // Your existing makeTurn function code
    // ...
}

function checkWin() {
    // Your existing checkWin function code
    // ...
}

function winCond(x) {
    // Your existing winCond function code
    // ...
}

// Initialize the game on page load
newGame();

HTML CODE 

<!DOCTYPE html>
<html>
<head>
    <title>Multiplayer Tic-Tac-Toe</title>
    <script src="game.js"></script>
</head>
<body>
    <h1>Multiplayer Tic-Tac-Toe</h1>
    <div id="game-container" class="table">
        <!-- The game board will be created here -->
    </div>
    <div id="scores">
        <p>Player 1 Score: <span id="score1">0</span></p>
        <p>Player 2 Score: <span id="score2">0</span></p>
    </div>
    <div class="new">
        <button id="NewButton" onclick="newGame()">Start New Game</button>
    </div>
</body>
</html>